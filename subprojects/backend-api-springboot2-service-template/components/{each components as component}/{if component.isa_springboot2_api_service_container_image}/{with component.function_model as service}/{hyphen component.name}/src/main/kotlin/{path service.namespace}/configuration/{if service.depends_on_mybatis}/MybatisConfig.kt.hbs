package {{service.namespace}}.configuration

import org.apache.ibatis.session.SqlSession
import org.apache.ibatis.session.SqlSessionFactory
import org.mybatis.spring.SqlSessionFactoryBean
import org.mybatis.spring.SqlSessionTemplate
import org.springframework.beans.factory.annotation.Qualifier
import org.springframework.context.annotation.Bean
import org.springframework.context.annotation.Configuration
import org.springframework.core.io.support.PathMatchingResourcePatternResolver
import javax.sql.DataSource

@Configuration
class MybatisConfig {
    {{#each service.datasources as |datasource| ~}}
    {{define 'datasource_name' (lower-camel datasource.name) ~}}
    @Bean
    fun {{datasource_name}}SqlSessionFactory(
        @Qualifier("{{datasource_name}}Datasource") datasource: DataSource
    ): SqlSessionFactory = SqlSessionFactoryBean().also {
        it.setDataSource(datasource)
        it.setMapperLocations(
            *PathMatchingResourcePatternResolver().getResources("classpath*:**/*Repository.xml")
        )
    }.getObject()!!

    @Bean
    fun {{datasource_name}}SqlSession(
        @Qualifier("{{datasource_name}}SqlSessionFactory") sqlSessionFactory: SqlSessionFactory
    ): SqlSession = SqlSessionTemplate(sqlSessionFactory)
    {{/each}}
}