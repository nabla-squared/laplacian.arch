{{define "package" (concat service.namespace ".data_file") ~}}
package {{package}}

import com.fasterxml.jackson.core.type.TypeReference
import com.fasterxml.jackson.module.kotlin.jacksonObjectMapper
import org.springframework.beans.factory.annotation.Value
import org.springframework.core.io.FileSystemResource
import org.springframework.stereotype.Component

/**
 * A utility class accessing data files.
 */
@Component
class DataFileAccess(
    {{#each service.data_files as |data_file| ~}}
    @Value("\${graphql.data-file.{{hyphen data_file.name}}.path:{{data_file.default_path ~}} }")
    private val {{lower-camel data_file.name}}Path: String,
    {{/each}}
) {
    {{#each service.data_files as |data_file| ~}}
    val {{lower-camel data_file.name}}Data: List<Map<String, Any?>> by lazy {
        mapper.readValue(
            FileSystemResource({{lower-camel data_file.name}}Path).inputStream,
            object: TypeReference<List<Map<String, Any?>>>() {}
        )
    }
    {{/each}}

    companion object {
        val mapper = jacksonObjectMapper()
    }
}

