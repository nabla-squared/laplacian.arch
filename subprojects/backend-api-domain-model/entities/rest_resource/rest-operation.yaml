entities:
- name: rest_operation
  namespace: laplacian.arch.backend.api.rest

  properties:
  - name: method
    type: string
    domain_type_name: http_method_for_rest

  - name: path
    type: string
    domain_type_name: url_path_with_placeholder

  - name: name
    type: string
    primary_key: true

  - name: description
    type: string
    optional: true
    default_value: |
      "${method} ${path}"

  relationships:
  - name: arguments
    reference_entity_name: api_call_argument
    reference_entity_namespace: laplacian.arch.backend.api
    cardinality: '*'
    aggregate: true

  - name: path_parameters
    reference_entity_name: rest_request_parameter
    cardinality: '*'
    aggregate: true

  - name: query_parameters
    reference_entity_name: rest_request_parameter
    cardinality: '*'
    aggregate: true

  - name: http_headers
    reference_entity_name: rest_request_parameter
    cardinality: '*'
    aggregate: true

  - name: rest_resource
    reference_entity_name: rest_resource
    cardinality: '1'
    reverse_of: operations

  - name: response
    reference_entity_name: rest_operation_response
    reference_entity_namespace: laplacian.arch.backend.api.rest
    cardinality: '1'
    aggregate: true

- name: rest_operation_response
  namespace: laplacian.arch.backend.api.rest

  properties:
  - name: type
    type: string
    domain:
      choices:
      - value: string
      - value: number
      - value: boolean
      - value: array
      - value: object

  - name: optional
    type: boolean
    optional: true
    default_value: |
      false

  - name: multiple
    type: boolean
    optional: true
    default_value: |
      false

  - name: type_in_java
    type: string
    snippet: |
      when(type) {
          "number" -> "Int"
          "object" -> "Map<String, Any?>"
          "array" -> "List<Any>"
          else -> type.upperCamelize()
      }.let {
          (if (multiple) "List<$it>" else it) + (if (optional) "?" else "")
      }
